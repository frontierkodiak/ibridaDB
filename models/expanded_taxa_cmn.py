from sqlalchemy import (
    Column, Integer, String, Text, Boolean, Float, Index
)
from .base import Base

class ExpandedTaxaCmn(Base):
    """
    Copy of expanded_taxa with additional common‑name columns.
    Only the *preferred English* common name is stored per taxon.
    """
    __tablename__ = "expanded_taxa_cmn"

    taxonID       = Column(Integer, primary_key=True, nullable=False)
    rankLevel     = Column(Float, index=True)
    rank          = Column(String(255))
    name          = Column(String(255), index=True)
    commonName    = Column(String(255))               # NEW
    taxonActive   = Column(Boolean, index=True)

    # Ancestral columns – dots converted to underscores to match SQL
    L5_taxonID    = Column(Integer)
    L5_name       = Column(Text)
    L5_commonName = Column(String(255))
    L10_taxonID    = Column(Integer)
    L10_name       = Column(Text)
    L10_commonName = Column(String(255))
    L11_taxonID    = Column(Integer)
    L11_name       = Column(Text)
    L11_commonName = Column(String(255))
    L12_taxonID    = Column(Integer)
    L12_name       = Column(Text)
    L12_commonName = Column(String(255))
    L13_taxonID    = Column(Integer)
    L13_name       = Column(Text)
    L13_commonName = Column(String(255))
    L15_taxonID    = Column(Integer)
    L15_name       = Column(Text)
    L15_commonName = Column(String(255))
    L20_taxonID    = Column(Integer)
    L20_name       = Column(Text)
    L20_commonName = Column(String(255))
    L24_taxonID    = Column(Integer)
    L24_name       = Column(Text)
    L24_commonName = Column(String(255))
    L25_taxonID    = Column(Integer)
    L25_name       = Column(Text)
    L25_commonName = Column(String(255))
    L26_taxonID    = Column(Integer)
    L26_name       = Column(Text)
    L26_commonName = Column(String(255))
    L27_taxonID    = Column(Integer)
    L27_name       = Column(Text)
    L27_commonName = Column(String(255))
    L30_taxonID    = Column(Integer)
    L30_name       = Column(Text)
    L30_commonName = Column(String(255))
    L32_taxonID    = Column(Integer)
    L32_name       = Column(Text)
    L32_commonName = Column(String(255))
    L33_taxonID    = Column(Integer)
    L33_name       = Column(Text)
    L33_commonName = Column(String(255))
    L33_5_taxonID    = Column(Integer)
    L33_5_name       = Column(Text)
    L33_5_commonName = Column(String(255))
    L34_taxonID    = Column(Integer)
    L34_name       = Column(Text)
    L34_commonName = Column(String(255))
    L34_5_taxonID    = Column(Integer)
    L34_5_name       = Column(Text)
    L34_5_commonName = Column(String(255))
    L35_taxonID    = Column(Integer)
    L35_name       = Column(Text)
    L35_commonName = Column(String(255))
    L37_taxonID    = Column(Integer)
    L37_name       = Column(Text)
    L37_commonName = Column(String(255))
    L40_taxonID    = Column(Integer)
    L40_name       = Column(Text)
    L40_commonName = Column(String(255))
    L43_taxonID    = Column(Integer)
    L43_name       = Column(Text)
    L43_commonName = Column(String(255))
    L44_taxonID    = Column(Integer)
    L44_name       = Column(Text)
    L44_commonName = Column(String(255))
    L45_taxonID    = Column(Integer)
    L45_name       = Column(Text)
    L45_commonName = Column(String(255))
    L47_taxonID    = Column(Integer)
    L47_name       = Column(Text)
    L47_commonName = Column(String(255))
    L50_taxonID    = Column(Integer)
    L50_name       = Column(Text)
    L50_commonName = Column(String(255))
    L53_taxonID    = Column(Integer)
    L53_name       = Column(Text)
    L53_commonName = Column(String(255))
    L57_taxonID    = Column(Integer)
    L57_name       = Column(Text)
    L57_commonName = Column(String(255))
    L60_taxonID    = Column(Integer)
    L60_name       = Column(Text)
    L60_commonName = Column(String(255))
    L67_taxonID    = Column(Integer)
    L67_name       = Column(Text)
    L67_commonName = Column(String(255))
    L70_taxonID    = Column(Integer)
    L70_name       = Column(Text)
    L70_commonName = Column(String(255))

# Helpful composite index for frequent ancestor look‑ups
Index("idx_expanded_taxa_cmn_L10_taxonID", "L10_taxonID")